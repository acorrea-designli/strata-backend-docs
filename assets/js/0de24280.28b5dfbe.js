"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[776],{2604:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var o=t(4848),r=t(8453);const s={sidebar_position:3},i="Represented Regions",a={id:"docs/Product/locationValue",title:"Represented Regions",description:"When the user fills the location input, wee should show the regions that the user can choose. when the finish selecting all regions, we can use the following mutation to set the regions to the user organization.",source:"@site/docs/docs/Product/locationValue.md",sourceDirName:"docs/Product",slug:"/docs/Product/locationValue",permalink:"/strata-backend-docs/docs/Product/locationValue",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"User selections",permalink:"/strata-backend-docs/docs/Product/set"}},c={},d=[];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"represented-regions",children:"Represented Regions"}),"\n",(0,o.jsxs)(n.p,{children:["When the user fills the ",(0,o.jsx)(n.code,{children:"location"})," input, wee should show the regions that the user can choose. when the finish selecting all regions, we can use the following mutation to set the regions to the user organization."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-graphql",children:"mutation Mutation($data: SetLocationsInput!) {\r\n  setOrganizationRepresentativeRegions(data: $data) {\r\n    uuid\r\n    createdAt\r\n    updatedAt\r\n    organization {\r\n      name\r\n      uuid\r\n    }\r\n    city {\r\n      name\r\n      uuid\r\n    }\r\n    county {\r\n      uuid\r\n      name\r\n    }\r\n    country {\r\n      uuid\r\n      name\r\n    }\r\n    state {\r\n      uuid\r\n      name\r\n    }\r\n  }\r\n}\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\r\n  "data": {\r\n    "userUUID": "",\r\n    "locations": [\r\n      {\r\n        "locationUUID": "",\r\n        "type": ""\r\n      },\r\n      {\r\n        "locationUUID": "",\r\n        "type": ""\r\n      },\r\n      {\r\n        "locationUUID": "",\r\n        "type": ""\r\n      },\r\n      {\r\n        "locationUUID": "",\r\n        "type": ""\r\n      }\r\n    ]\r\n  }\r\n}\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["The locationUUID is the uuid of the location that the user selected. Doesn't matter if it is a city, county, country or state as long as the type is the same as the location ",(0,o.jsx)(n.a,{href:"../../enums/LocationType",children:"type"}),"."]})}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["We can list the locations using the queries that are in the ",(0,o.jsx)(n.a,{href:"/category/Location/",children:"Location"})," section."]})})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var o=t(6540);const r={},s=o.createContext(r);function i(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);